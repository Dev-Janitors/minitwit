# version: '3'
# services:
#     db:
#         build: ./Database
#         container_name: Database
#         ports:
#             - '1433:1433'

#     api:
#         build: ./Backend
#         container_name: Backend
#         ports:
#             - '2222:80'
#             - '2223:443'
#         depends_on:
#             - db

version: '3.3'

networks:
    main:

services:
    reverse-proxy:
        # The official v2 Traefik docker image
        image: traefik:v2.9
        container_name: 'traefik'
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - './etc/traefik/:/etc/traefik/:ro'
            - './traefik-ssl-certs:/ssl-certs'

    minitwitfrontend:
        build: ./Frontend
        container_name: minitwitfrontend
        depends_on:
            - backend

        labels:
            - traefik.enable=true
            - traefik.http.routers.minitwitfrontend.rule=Host(`${BASEURL}`)
            - traefik.http.routers.minitwitfrontend.entrypoints=websecure,web

            - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://api.localhost,http://api.localhost, https://104.248.101.163/api, http://104.248.101.163/api'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'

            - traefik.http.routers.minitwitfrontend.tls=true
            - traefik.http.routers.minitwitfrontend.tls.certresolver=staging

    backend:
        build: ./Backend
        container_name: minitwitbackend
        depends_on:
            - db
        ports:
            - '2222:80'
            - '2223:443'
        labels:
            - traefik.enable=true

            # Define the router for HTTPS
            - traefik.http.routers.minitwitbackend.rule=Host(`${BASEURL}`) && PathPrefix(`/api`)
            - traefik.http.routers.minitwitbackend.entrypoints=websecure,web

            # Create a middleware to strip the /api prefix
            - 'traefik.http.middlewares.myservice-strip.stripprefix.prefixes=/api'
            - 'traefik.http.middlewares.myservice-strip.stripprefix.forceslash=false'
            # Add the middleware to the router (backend)
            - 'traefik.http.routers.minitwitbackend.middlewares=myservice-strip'

            - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto = https

            - 'traefik.http.middlewares.minitwitbackend.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.minitwitbackend.headers.accesscontrolalloworiginlist=https://localhost,http://host.docker.internal, https://host.docker.internal, http://localhost, https://104.248.101.163,http://104.248.101.163/'
            - 'traefik.http.middlewares.minitwitbackend.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.minitwitbackend.headers.addvaryheader=true'

            - traefik.http.routers.minitwitbackend.tls=true
            - traefik.http.routers.minitwitbackend.tls.certresolver=staging

    db:
        platform: 'linux/amd64'
        image: ${DOCKER_USERNAME}/minitwitdb
        container_name: minitwitdb
        ports:
            - '1433:1433'
    prometheus:
        image: ubuntu/prometheus
        container_name: dev_prometheus_test
        ports:
        - "30090:9090"
        environment:
        - TZ=Europe/Copenhagen
        volumes:
        - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    grafana:
        image: grafana/grafana
        container_name: dev_grafana_test
        ports:
        - "30091:3000"
        volumes:
        - ./grafana-data/data:/var/lib/grafana
